@startuml Library
!theme vibrant
skinparam linetype ortho


class Library {
    -name: String
    +getName(): String
    +getLibrarians(): List<Librarian>
    +getMembers():List<Member>
    +getBooks():List<Book>
    +getBorrowingSystem():BorrowingSystem

}

abstract class Book {
    -title: String
    -author: String
    -ISBN: String
    -genre: Genre
    -isAvailable: boolean
    +getTitle(): String
    +getAuthor(): String
    +getISBN(): String
    +getGenre(): Genre
    +getIsAvailable(): boolean
    +setAvailable(IsAvailable: boolean): void
}

enum Genre {
    Fiction
    Drama
    Fantasy
    Mystery
}

class Ebook {
    -fileFormat: String
    -fileSize: double
    +getFileFormat(): String
    +getFileSize(): double
}

class PrintedBook {
    -pagesCount: int
    -physicalCondition: PhysicalCondition
    +getPagesCount(): Integer
    +getPhysicalCondition(): PhysicalCondition
}

enum PhysicalCondition {
    New
    Good
    Worn   
}

abstract class Person {
    -name: String
    -contactInfo: String
    +getName(): String
    +getContactInfo(): String
}

class Librarian {
    -staffID: String
    +addBook(bookTitle: String): void
    +removeBook(bookTitle: String): void
    +updateBookInfo(bookTitle: String): void
    +getStaffId(): String
}

class Member {
    -memberID: String
    -currentBorrowedBooks: Integer
    +borrowBook(book: Book, borrowDate: Date,\n dueDate: Date): void
    +getMemberID():String
    +getCurrentBorrowedBooks():Integer
}

class BorrowedHistory {
    -book: Book
    -borrowDate: Date
    -returnDate: Date 
    +getBook(): Book
    +getBorrowDate(): Date
    +getReturnDate(): Date
}


class BorrowingSystem {
    +listBorrowedByMember(member: Member): void
    +listBorrowedByBook(book: Book): void
    +returnBook(book: Book): void
}

Book <|-- Ebook
Book <|-- PrintedBook





Person <|-- Librarian
Person <|-- Member 

Member *-[norank]- BorrowedHistory

BorrowingSystem --> Member : tracks
BorrowingSystem --> Book : tracks
BorrowingSystem --> BorrowedHistory : creates

Library *-- Librarian : employs
Library o-- Book : has
Library *-[norank]- Member : owns
Library --> BorrowingSystem : manages

@enduml
